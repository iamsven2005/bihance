generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider      = "postgresql"
  url           = env("DATABASE_URL")
  relationMode  = "prisma"
}

model user {
  clerkId       String              @id @default(cuid())
  first_name    String?
  last_name     String?
  image_url     String?
  email         String?             @unique
  events        event[]             @relation("UserEvents")
  subscriptions userSubcription[]
  payrolls      payroll[]
  attendances   attendance[]
  credits       Int                 @default(0)
}

model event {
  eventid     String       @id @default(cuid())
  managerId   String
  location    String
  image       String
  description String
  name        String
  files       files[]
  users       user[]       @relation("UserEvents")
  attendances attendance[]
  payrolls    payroll[]
}

model userSubcription {
  id                   String   @id @default(cuid())
  user_id              String   @unique
  stripeCustomerId     String   @unique
  stripeSubscriptionId String   @unique
  stripePriceId        String   @unique
  stripeEnd            DateTime @unique
  user                 user     @relation(fields: [user_id], references: [clerkId], onDelete: Cascade)
}

model payroll {
  payrollid String  @id @default(cuid())
  userId    String
  eventid   String
  rolltype  String  // manager, custom, teamlead
  user      user    @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  event     event   @relation(fields: [eventid], references: [eventid], onDelete: Cascade)
  typepay   typepay[]

  @@index([eventid])
  @@index([userId])
}

model typepay {
  typeid    String @id @default(cuid())
  payrollId String
  day       String  // weekday or weekend
  shift     String  // hr, min, day, location, shift
  pay       Int
  payroll   payroll @relation(fields: [payrollId], references: [payrollid], onDelete: Cascade)

  @@index([payrollId])
}

model attendance {
  id        String   @id @default(cuid())
  userId    String
  imageurl  String
  time      DateTime
  location  String
  eventId   String
  user      user     @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  event     event    @relation(fields: [eventId], references: [eventid], onDelete: Cascade)

  @@index([userId])
  @@index([eventId])
}

model files {
  id      String @id @default(cuid())
  eventId String
  url     String
  name    String
  event   event  @relation(fields: [eventId], references: [eventid], onDelete: Cascade)

  @@index([eventId])
}

model Feature {
  id          String @id @default(cuid())
  title       String
  description String
  votes       Vote[] @relation("FeatureVotes")
}

model Vote {
  id        String  @id @default(cuid())
  userId    String
  featureId String
  feature   Feature @relation(fields: [featureId], references: [id], name: "FeatureVotes")

  @@unique([userId, featureId])
  @@index([featureId])
}
